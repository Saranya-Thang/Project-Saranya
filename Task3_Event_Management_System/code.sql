-- 1) Database Creation --
CREATE DATABASE EventsManagement;
USE EventsManagement;

-- Create Events Table --
CREATE TABLE Events (
    Event_id SERIAL PRIMARY KEY,
    Event_Name VARCHAR(255) NOT NULL,
    Event_Date DATE NOT NULL,
    Event_Location VARCHAR(255),
    Event_Description VARCHAR(255)
);

-- Create Attendees Table --
CREATE TABLE Attendees (
    Attendee_id SERIAL PRIMARY KEY,
    Attendee_Name VARCHAR(255) NOT NULL,
    Attendee_Phone VARCHAR(20),
    Attendee_Email VARCHAR(255) UNIQUE NOT NULL,
    Attendee_City VARCHAR(255)
);

-- Create Registrations Table --
CREATE TABLE Registrations (
    Registration_id SERIAL PRIMARY KEY,
    Event_id INT REFERENCES Events(Event_id),
    Attendee_id INT REFERENCES Attendees(Attendee_id),
    Registration_Date DATE NOT NULL,
    Registration_Amount DECIMAL(10, 2)
);

-- 2. Data Creation --

-- Insert sample data into Events --
INSERT INTO Events VALUES 
  (1, 'Rio Carnival', '2025-03-02', 'Brazil','The largest carnival with vibrant samba parades'),
  (2, 'Oktoberfest','2025-09-20', 'Germany','Massive 16 day Bavarian beer festival with folk music'), 
  (3, 'Diwali', '2025-11-01', 'India','Festival of Lights celebrated across India with lamps and fireworks'),
  (4, 'Songkran Festival','2025-04-13', 'Thailand','Traditional Thailand New Year water festival'),
  (5, 'La Tomatina Festival','2025-08-28', 'Spain','Annual tomato throwing street party');

-- Insert sample data into Attendees --
INSERT INTO Attendees VALUES
(1,'John Doe', '1234567890', 'john@example.com', 'New York'),
(2,'Jane Smith', '2345678901', 'jane@example.com', 'San Francisco'),
(3,'Alice Johnson', '3456789012', 'alice@example.com', 'Chicago'),
(4,'Sangria Shane', '4567890123', 'sangria@example.com', 'India'),
(5,'Anna Muller', '5678901234', 'anna@example.com', 'Berlin');

-- Insert sample data into Registrations --
INSERT INTO Registrations VALUES
(1,1, 1, '2025-04-15', 100.00),
(2,2, 2, '2025-03-20', 50.00),
(3,3, 3, '2025-02-25', 75.00),
(4,4, 4, '2025-01-26', 200.00),
(5,5, 5, '2025-05-15', 300.00);

SELECT * FROM Events;
SELECT * FROM Attendees;
SELECT * FROM Registrations;

-- 3. Manage Event Details --

-- a) Inserting a new event into the Events table --

INSERT INTO Events VALUES 
(6,'Rainforest World Music Fest','2025-10-28', 'Malaysia', '3day world music festival in the rainforest');
SELECT * FROM Events;

-- b) Updating an event's information in the Events table

UPDATE Events
SET Event_Name = 'Edinburgh Fringe Festival',
    Event_Date = '2025-12-15',
    Event_Location = 'Scotland',
    Event_Description = 'Worldâ€™s largest performing arts festival with theater, comedy and music'
WHERE Event_id = 4;
SELECT * FROM Events;

-- c) Deleting an event --
DELETE 
FROM EVENTS
WHERE EVENT_ID = 3;
SELECT * FROM EVENTS;

-- 4) Manage Track Attendees & Handle Events --

-- a) Inserting a new attendee -- 

INSERT INTO Attendees VALUES
(6,'Emily Blunt', '6789012345', 'emily@example.com', 'California');
SELECT * FROM Attendees;

-- b)Registering an attendee for an event --

INSERT INTO Registrations VALUES (6, 4, 5, '2024-08-30', 150.00);
SELECT * FROM Registrations;

-- 5.Query to retrieve event information, generate attendee lists and calculate event attendance statistics --
-- Retrieve details of all events --

INSERT INTO Events VALUES (3, 'Diwali', '2025-11-01', 'India','Festival of Lights celebrated across India with lamps and fireworks');
SELECT * FROM Events;

-- Generate a list of all attendees registered in events --

SELECT A.Attendee_Name, A.Attendee_Phone, A.Attendee_Email, A.Attendee_City
FROM Attendees A
JOIN Registrations R ON A.Attendee_id = R.Attendee_id;


 -- Calculate the total number of attendees for each event --
 
SELECT E.Event_id, E.Event_Name, E.Event_Location, E.Event_Date, COUNT(R.Attendee_id) AS Total_Attendees
FROM Events E
LEFT JOIN Registrations R ON E.Event_id = R.Event_id
GROUP BY E.Event_id, E.Event_Name, E.Event_Location, E.Event_Date;

-- Calculate total revenue generated by each event --

SELECT E.Event_Name, SUM(R.Registration_Amount) AS Total_Revenue
FROM Events E
JOIN Registrations R ON E.Event_id = R.Event_id
GROUP BY E.Event_id, E.Event_Name;
